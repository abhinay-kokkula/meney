import React, { useState, useEffect } from 'react';
import { Bot, Send, Languages, Calculator, FileText, TrendingUp } from 'lucide-react';

interface Message {
  id: number;
  type: 'user' | 'bot';
  content: string;
  timestamp: Date;
}

interface UserProfile {
  income: string;
  hasInvestments: boolean;
  hasLoans: boolean;
  age: string;
  hasHRA: boolean;
  hasNPS: boolean;
  hasHealthInsurance: boolean;
}

const TaxAssistant = () => {
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputValue, setInputValue] = useState('');
  const [language, setLanguage] = useState('en');
  const [step, setStep] = useState(0);
  const [userProfile, setUserProfile] = useState<UserProfile>({
    income: '',
    hasInvestments: false,
    hasLoans: false,
    age: '',
    hasHRA: false,
    hasNPS: false,
    hasHealthInsurance: false,
  });

  const translations = {
    en: {
      title: 'TaxMENEY - AI Tax Assistant',
      subtitle: 'Get personalized Indian tax advice in simple terms',
      placeholder: 'Type your response here...',
      send: 'Send',
      welcome: 'Hey there! üëã I\'m your personal Tax Assistant. I know the Indian tax system inside out and I\'m here to help you save money legally! Let\'s start with some quick questions.',
      incomeQuestion: 'First things first - what\'s your annual income range?\n\n1. Under ‚Çπ2.5 Lakhs (No tax! üéâ)\n2. ‚Çπ2.5L - ‚Çπ5L (5% tax bracket)\n3. ‚Çπ5L - ‚Çπ10L (20% tax bracket)\n4. ‚Çπ10L - ‚Çπ12.5L (20% bracket)\n5. ‚Çπ12.5L - ‚Çπ15L (30% bracket)\n6. Above ‚Çπ15L (30% bracket)',
      ageQuestion: 'Got it! Now, are you:\n\n1. Below 60 years (Regular taxpayer)\n2. 60-80 years (Senior citizen - higher exemptions!)\n3. Above 80 years (Super senior - even better exemptions!)',
      investmentQuestion: 'Perfect! Now let me understand your current investments and benefits:\n\nDo you have any of these? (Just type yes/no for each)\n‚Ä¢ 80C investments (PPF, ELSS, Life Insurance)?\n‚Ä¢ HRA (House Rent Allowance)?\n‚Ä¢ NPS (National Pension Scheme)?\n‚Ä¢ Health Insurance?',
    },
    hi: {
      title: 'TaxMENEY - AI ‡§ü‡•à‡§ï‡•ç‡§∏ ‡§∏‡§π‡§æ‡§Ø‡§ï',
      subtitle: '‡§∏‡§∞‡§≤ ‡§≠‡§æ‡§∑‡§æ ‡§Æ‡•á‡§Ç ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ü‡•à‡§ï‡•ç‡§∏ ‡§∏‡§≤‡§æ‡§π ‡§™‡§æ‡§è‡§Ç',
      placeholder: '‡§Ø‡§π‡§æ‡§Å ‡§Ö‡§™‡§®‡§æ ‡§ú‡§µ‡§æ‡§¨ ‡§≤‡§ø‡§ñ‡•á‡§Ç...',
      send: '‡§≠‡•á‡§ú‡•á‡§Ç',
      welcome: '‡§®‡§Æ‡§∏‡•ç‡§§‡•á! üëã ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§ü‡•à‡§ï‡•ç‡§∏ ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§π‡•Ç‡§Å‡•§ ‡§Æ‡•Å‡§ù‡•á ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ü‡•à‡§ï‡•ç‡§∏ ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§ï‡•Ä ‡§™‡•Ç‡§∞‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§π‡•à ‡§î‡§∞ ‡§Æ‡•à‡§Ç ‡§Ø‡§π‡§æ‡§Å ‡§Ü‡§™‡§ï‡§æ ‡§™‡•à‡§∏‡§æ ‡§ï‡§æ‡§®‡•Ç‡§®‡•Ä ‡§§‡§∞‡•Ä‡§ï‡•á ‡§∏‡•á ‡§¨‡§ö‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡•Ç‡§Ç‡§ó‡§æ!',
      incomeQuestion: '‡§™‡§π‡§≤‡•á ‡§¨‡§§‡§æ‡§á‡§è - ‡§Ü‡§™‡§ï‡•Ä ‡§∏‡§æ‡§≤‡§æ‡§®‡§æ ‡§Ü‡§Ø ‡§ï‡§ø‡§§‡§®‡•Ä ‡§π‡•à?\n\n1. ‚Çπ2.5 ‡§≤‡§æ‡§ñ ‡§∏‡•á ‡§ï‡§Æ (‡§ï‡•ã‡§à ‡§ü‡•à‡§ï‡•ç‡§∏ ‡§®‡§π‡•Ä‡§Ç! üéâ)\n2. ‚Çπ2.5L - ‚Çπ5L (5% ‡§ü‡•à‡§ï‡•ç‡§∏)\n3. ‚Çπ5L - ‚Çπ10L (20% ‡§ü‡•à‡§ï‡•ç‡§∏)\n4. ‚Çπ10L - ‚Çπ12.5L (20% ‡§ü‡•à‡§ï‡•ç‡§∏)\n5. ‚Çπ12.5L - ‚Çπ15L (30% ‡§ü‡•à‡§ï‡•ç‡§∏)\n6. ‚Çπ15L ‡§∏‡•á ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ (30% ‡§ü‡•à‡§ï‡•ç‡§∏)',
      ageQuestion: '‡§∏‡§Æ‡§ù ‡§ó‡§Ø‡§æ! ‡§Ö‡§¨ ‡§¨‡§§‡§æ‡§á‡§è ‡§Ü‡§™‡§ï‡•Ä ‡§â‡§Æ‡•ç‡§∞:\n\n1. 60 ‡§∏‡§æ‡§≤ ‡§∏‡•á ‡§ï‡§Æ (‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§ï‡§∞‡§¶‡§æ‡§§‡§æ)\n2. 60-80 ‡§∏‡§æ‡§≤ (‡§µ‡§∞‡§ø‡§∑‡•ç‡§† ‡§®‡§æ‡§ó‡§∞‡§ø‡§ï - ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§õ‡•Ç‡§ü!)\n3. 80 ‡§∏‡§æ‡§≤ ‡§∏‡•á ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ (‡§Ö‡§§‡§ø ‡§µ‡§∞‡§ø‡§∑‡•ç‡§† - ‡§î‡§∞ ‡§≠‡•Ä ‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§õ‡•Ç‡§ü!)',
      investmentQuestion: '‡§¨‡§π‡•Å‡§§ ‡§¨‡§¢‡§º‡§ø‡§Ø‡§æ! ‡§Ö‡§¨ ‡§¨‡§§‡§æ‡§á‡§è ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™‡§ï‡•á ‡§™‡§æ‡§∏ ‡§Ø‡•á ‡§π‡•à‡§Ç? (‡§π‡§∞ ‡§è‡§ï ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡§æ‡§Å ‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§≤‡§ø‡§ñ‡•á‡§Ç)\n‚Ä¢ 80C ‡§®‡§ø‡§µ‡•á‡§∂ (PPF, ELSS, ‡§ú‡•Ä‡§µ‡§® ‡§¨‡•Ä‡§Æ‡§æ)?\n‚Ä¢ HRA (‡§Æ‡§ï‡§æ‡§® ‡§ï‡§ø‡§∞‡§æ‡§Ø‡§æ ‡§≠‡§§‡•ç‡§§‡§æ)?\n‚Ä¢ NPS (‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞‡•Ä‡§Ø ‡§™‡•á‡§Ç‡§∂‡§® ‡§Ø‡•ã‡§ú‡§®‡§æ)?\n‚Ä¢ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§¨‡•Ä‡§Æ‡§æ?',
    }
  };

  const t = translations[language as keyof typeof translations];

  useEffect(() => {
    // Initial welcome message
    setMessages([
      {
        id: 1,
        type: 'bot',
        content: t.welcome,
        timestamp: new Date(),
      },
      {
        id: 2,
        type: 'bot',
        content: t.incomeQuestion,
        timestamp: new Date(),
      }
    ]);
  }, [language]);

  const calculateDetailedTax = (profile: UserProfile) => {
    const incomeRanges = {
      '1': 200000, '2': 375000, '3': 750000, 
      '4': 1125000, '5': 1375000, '6': 2000000
    };
    
    const income = incomeRanges[profile.income as keyof typeof incomeRanges] || 0;
    let tax = 0;
    let exemptionUsed = 0;
    let deductions = 0;

    // Calculate tax slabs
    if (income > 250000) tax += Math.min(income - 250000, 250000) * 0.05;
    if (income > 500000) tax += Math.min(income - 500000, 500000) * 0.20;
    if (income > 1000000) tax += Math.min(income - 1000000, 250000) * 0.20;
    if (income > 1250000) tax += (income - 1250000) * 0.30;

    // Apply deductions
    if (profile.hasInvestments) {
      deductions += 150000; // 80C
      exemptionUsed += 150000 * (income > 1250000 ? 0.30 : income > 500000 ? 0.20 : 0.05);
    }
    if (profile.hasNPS) {
      deductions += 50000; // 80CCD(1B)
      exemptionUsed += 50000 * (income > 1250000 ? 0.30 : income > 500000 ? 0.20 : 0.05);
    }
    if (profile.hasHealthInsurance) {
      deductions += 25000; // 80D
      exemptionUsed += 25000 * (income > 1250000 ? 0.30 : income > 500000 ? 0.20 : 0.05);
    }

    return {
      grossIncome: income,
      taxBeforeDeductions: tax,
      totalDeductions: deductions,
      taxSaved: exemptionUsed,
      finalTax: Math.max(0, tax - exemptionUsed),
      takeHome: income - Math.max(0, tax - exemptionUsed)
    };
  };

  const generateEnhancedTaxAdvice = (profile: UserProfile) => {
    const calculation = calculateDetailedTax(profile);
    const isHindi = language === 'hi';
    
    let advice = '';
    
    if (isHindi) {
      advice = `üßÆ ‡§Ü‡§™‡§ï‡§æ ‡§µ‡§ø‡§∏‡•ç‡§§‡•É‡§§ ‡§ü‡•à‡§ï‡•ç‡§∏ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£:\n\n`;
      advice += `üìä ‡§ï‡•Å‡§≤ ‡§Ü‡§Ø: ‚Çπ${(calculation.grossIncome/100000).toFixed(1)}L\n`;
      advice += `üí∞ ‡§¨‡§ø‡§®‡§æ ‡§ï‡§ü‡•å‡§§‡•Ä ‡§ï‡•á ‡§ü‡•à‡§ï‡•ç‡§∏: ‚Çπ${Math.round(calculation.taxBeforeDeductions)}\n`;
      advice += `üéØ ‡§ï‡•Å‡§≤ ‡§ï‡§ü‡•å‡§§‡•Ä: ‚Çπ${calculation.totalDeductions}\n`;
      advice += `üí∏ ‡§ü‡•à‡§ï‡•ç‡§∏ ‡§¨‡§ö‡§§: ‚Çπ${Math.round(calculation.taxSaved)}\n`;
      advice += `‚úÖ ‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§ü‡•à‡§ï‡•ç‡§∏: ‚Çπ${Math.round(calculation.finalTax)}\n`;
      advice += `üè† ‡§Ü‡§™‡§ï‡§æ ‡§ü‡•á‡§ï ‡§π‡•ã‡§Æ: ‚Çπ${(calculation.takeHome/100000).toFixed(1)}L\n\n`;
      
      advice += `üéØ ‡§Æ‡•á‡§∞‡•á ‡§∏‡•Å‡§ù‡§æ‡§µ:\n`;
      if (!profile.hasInvestments) advice += `‚Ä¢ ‡§§‡•Å‡§∞‡§Ç‡§§ PPF ‡§Ø‡§æ ELSS ‡§Æ‡•á‡§Ç ‡§®‡§ø‡§µ‡•á‡§∂ ‡§ï‡§∞‡•á‡§Ç - ‚Çπ45,000 ‡§§‡§ï ‡§¨‡§ö‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç!\n`;
      if (!profile.hasNPS) advice += `‚Ä¢ NPS ‡§ñ‡§æ‡§§‡§æ ‡§ñ‡•ã‡§≤‡•á‡§Ç - ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‚Çπ15,000 ‡§¨‡§ö‡§§!\n`;
      if (!profile.hasHealthInsurance) advice += `‚Ä¢ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§¨‡•Ä‡§Æ‡§æ ‡§≤‡•á‡§Ç - ‚Çπ7,500 ‡§§‡§ï ‡§¨‡§ö‡§§!\n`;
    } else {
      advice = `üßÆ Your Detailed Tax Analysis:\n\n`;
      advice += `üìä Gross Income: ‚Çπ${(calculation.grossIncome/100000).toFixed(1)}L\n`;
      advice += `üí∞ Tax before deductions: ‚Çπ${Math.round(calculation.taxBeforeDeductions)}\n`;
      advice += `üéØ Total deductions claimed: ‚Çπ${calculation.totalDeductions}\n`;
      advice += `üí∏ Tax saved: ‚Çπ${Math.round(calculation.taxSaved)}\n`;
      advice += `‚úÖ Final tax liability: ‚Çπ${Math.round(calculation.finalTax)}\n`;
      advice += `üè† Your take-home: ‚Çπ${(calculation.takeHome/100000).toFixed(1)}L\n\n`;
      
      advice += `üéØ My Recommendations:\n`;
      if (!profile.hasInvestments) advice += `‚Ä¢ Invest in PPF/ELSS immediately - save up to ‚Çπ45,000!\n`;
      if (!profile.hasNPS) advice += `‚Ä¢ Open NPS account - additional ‚Çπ15,000 savings!\n`;
      if (!profile.hasHealthInsurance) advice += `‚Ä¢ Get health insurance - save up to ‚Çπ7,500!\n`;
      
      advice += `\nüî• Pro Tips:\n`;
      advice += `‚Ä¢ Use new tax regime only if you have minimal deductions\n`;
      advice += `‚Ä¢ Keep all investment receipts for ITR filing\n`;
      advice += `‚Ä¢ Consider ELSS for wealth creation + tax saving\n`;
      advice += `‚Ä¢ Plan investments by December for maximum benefit`;
    }
    
    return advice;
  };

  const handleSendMessage = () => {
    if (!inputValue.trim()) return;

    const userMessage = {
      id: Date.now(),
      type: 'user' as const,
      content: inputValue,
      timestamp: new Date(),
    };

    setMessages(prev => [...prev, userMessage]);

    setTimeout(() => {
      let botResponse = '';

      if (step === 0) {
        const incomeChoice = inputValue.trim();
        if (['1', '2', '3', '4', '5', '6'].includes(incomeChoice)) {
          setUserProfile(prev => ({ ...prev, income: incomeChoice }));
          setStep(1);
          botResponse = t.ageQuestion;
        } else {
          botResponse = language === 'hi' 
            ? '‡§ï‡•É‡§™‡§Ø‡§æ 1-6 ‡§Æ‡•á‡§Ç ‡§∏‡•á ‡§ï‡•ã‡§à ‡§è‡§ï ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™ ‡§ö‡•Å‡§®‡•á‡§Ç‡•§'
            : 'Please choose a valid option (1-6).';
        }
      } else if (step === 1) {
        const ageChoice = inputValue.trim();
        if (['1', '2', '3'].includes(ageChoice)) {
          setUserProfile(prev => ({ ...prev, age: ageChoice }));
          setStep(2);
          botResponse = t.investmentQuestion;
        } else {
          botResponse = language === 'hi' 
            ? '‡§ï‡•É‡§™‡§Ø‡§æ 1-3 ‡§Æ‡•á‡§Ç ‡§∏‡•á ‡§ï‡•ã‡§à ‡§è‡§ï ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™ ‡§ö‡•Å‡§®‡•á‡§Ç‡•§'
            : 'Please choose a valid option (1-3).';
        }
      } else if (step === 2) {
        const response = inputValue.toLowerCase();
        const hasInvestments = response.includes('yes') || response.includes('‡§π‡§æ‡§Å');
        const hasHRA = response.includes('hra') || response.includes('house rent');
        const hasNPS = response.includes('nps') || response.includes('pension');
        const hasHealthInsurance = response.includes('health') || response.includes('insurance');
        
        const updatedProfile = {
          ...userProfile,
          hasInvestments,
          hasHRA,
          hasNPS,
          hasHealthInsurance
        };
        
        setUserProfile(updatedProfile);
        botResponse = generateEnhancedTaxAdvice(updatedProfile);
        
        localStorage.setItem('meneyTaxProfile', JSON.stringify({
          ...updatedProfile,
          timestamp: new Date()
        }));
      }

      const botMessage = {
        id: Date.now() + 1,
        type: 'bot' as const,
        content: botResponse,
        timestamp: new Date(),
      };

      setMessages(prev => [...prev, botMessage]);
    }, 1000);

    setInputValue('');
  };

  return (
    <div className="min-h-screen bg-blue-50">
      <div className="max-w-4xl mx-auto px-4 py-8">
        {/* Header */}
        <div className="text-center mb-8">
          <div className="flex justify-center mb-4">
            <div className="w-16 h-16 bg-blue-600 rounded-2xl flex items-center justify-center">
              <Bot className="w-8 h-8 text-white" />
            </div>
          </div>
          <h1 className="text-3xl font-bold text-gray-900 mb-2">{t.title}</h1>
          <p className="text-gray-600">{t.subtitle}</p>
          
          {/* Enhanced Stats */}
          <div className="flex justify-center gap-6 mt-6">
            <div className="text-center">
              <div className="flex items-center justify-center mb-1">
                <Calculator className="w-5 h-5 text-blue-600 mr-1" />
                <span className="text-xl font-bold text-blue-600">‚Çπ50L+</span>
              </div>
              <p className="text-sm text-gray-600">Tax Saved</p>
            </div>
            <div className="text-center">
              <div className="flex items-center justify-center mb-1">
                <FileText className="w-5 h-5 text-green-600 mr-1" />
                <span className="text-xl font-bold text-green-600">95%</span>
              </div>
              <p className="text-sm text-gray-600">Accuracy</p>
            </div>
            <div className="text-center">
              <div className="flex items-center justify-center mb-1">
                <TrendingUp className="w-5 h-5 text-purple-600 mr-1" />
                <span className="text-xl font-bold text-purple-600">24/7</span>
              </div>
              <p className="text-sm text-gray-600">Available</p>
            </div>
          </div>
          
          {/* Language Toggle */}
          <div className="flex justify-center mt-6">
            <div className="flex bg-white rounded-lg p-1 shadow-md">
              <button
                onClick={() => setLanguage('en')}
                className={`flex items-center space-x-2 px-4 py-2 rounded-md transition-colors ${
                  language === 'en' ? 'bg-blue-600 text-white' : 'text-gray-700'
                }`}
              >
                <Languages className="w-4 h-4" />
                <span>English</span>
              </button>
              <button
                onClick={() => setLanguage('hi')}
                className={`flex items-center space-x-2 px-4 py-2 rounded-md transition-colors ${
                  language === 'hi' ? 'bg-blue-600 text-white' : 'text-gray-700'
                }`}
              >
                <Languages className="w-4 h-4" />
                <span>‡§π‡§ø‡§Ç‡§¶‡•Ä</span>
              </button>
            </div>
          </div>
        </div>

        {/* Chat Interface */}
        <div className="bg-white rounded-2xl shadow-lg overflow-hidden">
          {/* Messages */}
          <div className="h-96 overflow-y-auto p-6 space-y-4">
            {messages.map((message) => (
              <div
                key={message.id}
                className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}
              >
                <div
                  className={`max-w-xs lg:max-w-md px-4 py-3 rounded-2xl ${
                    message.type === 'user'
                      ? 'bg-blue-600 text-white'
                      : 'bg-gray-100 text-gray-900'
                  }`}
                >
                  <p className="whitespace-pre-line">{message.content}</p>
                  <p className={`text-xs mt-2 ${
                    message.type === 'user' ? 'text-blue-200' : 'text-gray-500'
                  }`}>
                    {message.timestamp.toLocaleTimeString()}
                  </p>
                </div>
              </div>
            ))}
          </div>

          {/* Input */}
          <div className="border-t border-gray-200 p-4">
            <div className="flex space-x-4">
              <input
                type="text"
                value={inputValue}
                onChange={(e) => setInputValue(e.target.value)}
                onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                placeholder={t.placeholder}
                className="flex-1 px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-600"
              />
              <button
                onClick={handleSendMessage}
                className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-xl transition-colors flex items-center space-x-2"
              >
                <Send className="w-4 h-4" />
                <span className="hidden sm:inline">{t.send}</span>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default TaxAssistant;
